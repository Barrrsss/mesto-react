{"version":3,"sources":["images/header-logo.svg","components/Header.js","images/update-avatar.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/constants.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","utils/keycode.js","reportWebVitals.js","index.js"],"names":["Header","className","src","mestoLogo","alt","UserContext","React","createContext","Card","item","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onClick","type","name","id","length","Main","props","style","backgroundImage","avatar","onEditAvatar","pencil","onEditProfile","about","onAddPlace","cards","map","Footer","PopupWithForm","isOpen","onClose","title","onSubmit","noValidate","children","value","ImagePopup","card","options","url","headers","authorization","api","this","_url","_headers","fetch","res","ok","json","Promise","reject","Error","status","authentication","then","_getServerData","all","getProfileData","getInitialCards","formData","method","body","JSON","stringify","cardId","EditProfilePopup","useState","setName","setTitle","useEffect","e","preventDefault","onUpdateUser","placeholder","onChange","target","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","aboutRef","nameRef","App","setCurrentUser","setCards","getAllData","response","userData","cardsData","catch","err","console","log","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","onKeyDown","keyCode","tabIndex","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","data","saveEditedInfo","updateAvatar","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23ee1e9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.c2821b38.svg\";","import mestoLogo from \"../images/header-logo.svg\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={mestoLogo} alt=\"Логотип место\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/update-avatar.ae1a976d.svg\";","import React from 'react'\r\n\r\nexport const UserContext = React.createContext();","import React, {useContext}from \"react\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({item, onCardClick, onCardLike, onCardDelete}) {\r\n    const currentUser = useContext(UserContext);\r\n    function handleClick() {\r\n        onCardClick(item);\r\n    }\r\n    function handleLikeClick() {\r\n        onCardLike(item);\r\n    }\r\n    function handleLikeDelete() {\r\n        onCardDelete(item);\r\n    }\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = item.owner._id === currentUser._id;\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        `element__button-trash ${isOwn ? 'element__button-trash_visible' : ''}`\r\n    );\r\n    const isLiked = item.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName  = (\r\n        `element__button-like ${isLiked ? 'element__button-like_active' : ''}`\r\n    );\r\n    return (\r\n        <li className=\"element\">\r\n            <img className=\"element__image\" src={item.link} onClick={handleClick} alt=\"#\" />\r\n            <button className={cardDeleteButtonClassName} onClick={handleLikeDelete} type=\"button\" />\r\n            <div className=\"element__name-place\">\r\n                <h2 className=\"element__name-title\">{item.name}</h2>\r\n                <div className=\"element__like\">\r\n                    <button id=\"likeButton\" className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" />\r\n                    <p className=\"element__like-counter\">{item.likes.length}</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card","import React, {useContext} from \"react\";\r\nimport pencil from \"../images/update-avatar.svg\";\r\nimport Card from \"./Card\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = useContext(UserContext);\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__image\" style={{backgroundImage: `url(${currentUser.avatar})`}}\r\n                         onClick={props.onEditAvatar}>\r\n                    </div>\r\n                    <img className=\"profile__image-hover\" src={pencil} alt=\"Карандаш\"/>\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile} />\r\n                        <h2 className=\"profile__title\">{currentUser.about}</h2>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace} />\r\n            </section>\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {props.cards.map((item) => <Card key={item._id} item={item} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer","function PopupWithForm(props) {\r\n    return (\r\n        <div className={props.isOpen ? `popup popup_${props.name} popup_opened` : `popup popup_${props.name}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose} />\r\n                <div className=\"popup__area\">\r\n                    <h2 className=\"popup__title\">{`${props.title}`}</h2>\r\n\r\n                    <form className={`popup__fields popup__fields_${props.name}`} onSubmit={props.onSubmit} name=\"popups\" noValidate>\r\n                        {props.children}\r\n                        <button className=\"popup__button popup__button_edit-profile popup__button_active\"\r\n                                type=\"submit\"\r\n                                value=\"Сохранить\">Сохранить\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PopupWithForm\r\n\r\n","function ImagePopup(props) {\r\n\r\n    return (\r\n        <div className={props.card ? `popup popup_image popup_opened` : `popup popup_image`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close popup__close_image\" type=\"button\" onClick={props.onClose} />\r\n                <img className=\"popup__image-full\" src={props.card.link} alt=\"Фотография\"/>\r\n                <p className=\"popup__image-sign\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImagePopup","//конфиг валидации\r\nexport const validationConfig = {\r\n    formSelector: '.popup__fields',\r\n    inputSelector: '.popup__field',\r\n    submitButtonSelector: '.popup__button',\r\n    inputInvalidClass: 'popup__field_invalid',\r\n    inputErrorClass: 'popup__field-error',\r\n    buttonInvalidClass: 'popup__button_inactive',\r\n};\r\n\r\n//идентификация для Api\r\n\r\nconst options = {\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-19/',\r\n    headers: {\r\n        authorization: '34fdcd7c-5eb8-4424-b9a2-100499773e16',\r\n        'Content-Type': 'application/json',\r\n    }\r\n}\r\nexport default options;","import options from './constants'\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.url;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    authentication(name) {\r\n        return fetch(`${this._url}${name}`, {\r\n            headers: this._headers,\r\n        });\r\n    }\r\n\r\n    _getServerData(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n\r\n    getInitialCards() {\r\n        return this.authentication('cards')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getProfileData() {\r\n        return this.authentication('users/me')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getAllData() {\r\n        return Promise.all([this.getProfileData(), this.getInitialCards()]);\r\n    }\r\n\r\n    saveEditedInfo(formData) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                about: formData.about\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    addNewCard(item) {\r\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-19/cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: item.name,\r\n                link: item.link\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n            return fetch(`${this._url}cards/likes/${cardId}`, {\r\n                method: \"PUT\",\r\n                headers: this._headers,\r\n            }) .then(res => this._getServerData(res));\r\n        }\r\n        else {\r\n            return fetch(`${this._url}cards/likes/${cardId}`, {\r\n                method: \"DELETE\",\r\n                headers: this._headers\r\n            }) .then(res => this._getServerData(res));\r\n        }\r\n\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    updateAvatar(avatar) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify(avatar)\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n}\r\n\r\nconst api = new Api(options);\r\n\r\nexport default api;","import React, {useContext} from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function EditProfilePopup (props) {\r\n    const currentUser = useContext(UserContext);\r\n\r\n    const [name, setName] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    function nameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n    function titleChange(e) {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setTitle(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser ({\r\n            name,\r\n            about: title,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm id='popupEdit' title='Редактировать профиль' name='edit-profile'\r\n                       isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} >\r\n            <input id=\"nameField\" className=\"popup__field popup__field_name\" type=\"text\" name=\"name\"\r\n                   placeholder=\"Имя\" value={name} onChange={nameChange}\r\n                   minLength=\"2\" maxLength=\"40\" required/>\r\n            <span id='nameField-error'></span>\r\n            <input id=\"titleField\" className=\"popup__field popup__field_title\" type=\"text\" name=\"about\"\r\n                   placeholder=\"О себе\" value={title} onChange={titleChange}\r\n                   minLength=\"2\" maxLength=\"200\" required/>\r\n            <span id='titleField-error'></span>\r\n        </PopupWithForm>\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport {useRef} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n\r\nexport default function EditAvatarPopup (props) {\r\n    const avatarRef = useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n        avatarRef.current.value = '';\r\n    }\r\n    return (\r\n        <PopupWithForm id='popupAvatar' title='Обновить аватар' name='update-avatar'\r\n                       isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\r\n            <input id=\"updateField\" className=\"popup__field popup__field_update\" type=\"url\" name=\"link\"\r\n                   placeholder=\"Ссылка на картинку\" required ref={avatarRef} />\r\n            <span id='updateField-error'></span>\r\n        </PopupWithForm>\r\n    );\r\n}","import React from 'react'\r\nimport {useRef} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n\r\nexport default function AddPlacePopup (props) {\r\n    const aboutRef = useRef();\r\n    const nameRef = useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onAddPlace({\r\n            name: nameRef.current.value,\r\n            link: aboutRef.current.value\r\n        });\r\n        nameRef.current.value = '';\r\n        aboutRef.current.value = '';\r\n    }\r\n    return (\r\n        <PopupWithForm id=\"popupAdd\" title='Новое место' name='add-card' isOpen={props.isOpen}\r\n                       onClose={props.onClose} onSubmit={handleSubmit}>\r\n            <input id=\"placeField\" className=\"popup__field popup__field_add-card popup__field_place\" type=\"text\"\r\n                   name=\"name\" ref={nameRef}\r\n                   placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required/>\r\n            <span id='placeField-error'></span>\r\n            <input id=\"sourceField\" className=\"popup__field popup__field_add-card popup__field_source\"\r\n                   type=\"url\" ref={aboutRef}\r\n                   name=\"link\"\r\n                   placeholder=\"Ссылка на картинку\" required/>\r\n            <span id='sourceField-error'></span>\r\n        </PopupWithForm>\r\n    );\r\n}","import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport Footer from './Footer'\r\nimport PopupWithForm from './PopupWithForm'\r\nimport ImagePopup from './ImagePopup'\r\nimport ESC_KEYCODE from '../utils/keycode'\r\nimport api from \"../utils/Api\";\r\nimport {UserContext} from '../contexts/CurrentUserContext'\r\nimport EditProfilePopup from './EditProfilePopup'\r\nimport EditAvatarPopup from './EditAvatarPopup'\r\nimport AddPlacePopup from './AddPlacePopup'\r\n\r\nfunction App() {\r\n    const [currentUser, setCurrentUser] = useState({\r\n        name: '',\r\n        about: '',\r\n        avatar: ''\r\n    });\r\n\r\n    const [cards, setCards] = useState([]);\r\n    //получаем информацию о карточках и пользователе\r\n    useEffect(() => {\r\n        api.getAllData()\r\n            .then((response => {\r\n                const [userData, cardsData] = response;\r\n                setCards(cardsData);\r\n                setCurrentUser(userData);\r\n            }))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n    //функционал для открытия и закрытия попаов\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n        console.log(currentUser)\r\n    }\r\n\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n    }\r\n\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n    }\r\n\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    function onKeyPressed(e) {\r\n        if (e.keyCode === ESC_KEYCODE) {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n\r\n    //отрисовка лайков и запрос в api\r\n    function handleCardLike(item) {\r\n        const isLiked = item.likes.some(i => i._id === currentUser._id);\r\n\r\n        api.changeLikeCardStatus(item._id, !isLiked).then((newCard) => {\r\n            const newCards = cards.map((c) => c._id === item._id ? newCard : c);\r\n            setCards(newCards);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n\r\n    //обновление информации о пользователе\r\n    function handleUpdateUser(data) {\r\n        api.saveEditedInfo(data)\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    //удаление карточки\r\n    function handleCardDelete(item) {\r\n\r\n        api.deleteCard(item._id).then(() => {\r\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n            const newCards = cards.filter((c) => c._id !== item._id);\r\n            // Обновляем стейт\r\n            setCards(newCards);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    //обновление аватара\r\n    function handleUpdateAvatar(userData) {\r\n        api.updateAvatar(userData)\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // добавление новой карточки\r\n    function handleAddPlaceSubmit(formData) {\r\n        api.addNewCard(formData)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards])\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={currentUser}>\r\n            <div className=\"body\" onKeyDown={onKeyPressed} tabIndex=\"0\">\r\n                <div className=\"page\">\r\n\r\n                    <Header/>\r\n                    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\r\n                          onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\r\n                          cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete}/>\r\n                    <Footer/>\r\n\r\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\r\n                                      onUpdateUser={handleUpdateUser}/>\r\n\r\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\r\n                                     onUpdateAvatar={handleUpdateAvatar}/>\r\n\r\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\r\n                                   onAddPlace={handleAddPlaceSubmit}/>\r\n\r\n                    <PopupWithForm id='popupConfirm' title='Вы уверены?' name='confirm'>\r\n                    </PopupWithForm>\r\n                    <ImagePopup id='popupImage' card={selectedCard} onClose={closeAllPopups}>\r\n                    </ImagePopup>\r\n                </div>\r\n            </div>\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","//кнопка esc\r\nconst ESC_KEYCODE = 27;\r\nexport default ESC_KEYCODE;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}