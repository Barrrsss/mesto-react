{"version":3,"sources":["images/header-logo.svg","components/Header.js","utils/constants.js","utils/Api.js","images/update-avatar.svg","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","mestoLogo","alt","options","url","headers","authorization","api","this","_url","_headers","name","fetch","res","ok","json","Promise","reject","Error","status","authentication","then","_getServerData","all","getProfileData","getInitialCards","formData","method","body","JSON","stringify","about","item","link","cardId","avatar","Card","props","onClick","onCardClick","type","id","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getAllData","response","userData","cardsData","catch","err","console","log","style","backgroundImage","onEditAvatar","pencil","onEditProfile","onAddPlace","map","_id","Footer","PopupWithForm","isOpen","onClose","title","noValidate","children","value","ImagePopup","card","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32275c2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.c2821b38.svg\";","import mestoLogo from \"../images/header-logo.svg\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={mestoLogo} alt=\"Логотип место\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","//конфиг валидации\r\nexport const validationConfig = {\r\n    formSelector: '.popup__fields',\r\n    inputSelector: '.popup__field',\r\n    submitButtonSelector: '.popup__button',\r\n    inputInvalidClass: 'popup__field_invalid',\r\n    inputErrorClass: 'popup__field-error',\r\n    buttonInvalidClass: 'popup__button_inactive',\r\n};\r\n\r\n//кнопка esc\r\nexport const ESC_KEYCODE = 27;\r\n\r\n//идентификация для Api\r\n\r\nconst options = {\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-19/',\r\n    headers: {\r\n        authorization: '34fdcd7c-5eb8-4424-b9a2-100499773e16',\r\n        'Content-Type': 'application/json',\r\n    }\r\n}\r\nexport default options;","import options from './constants'\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.url;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    authentication(name) {\r\n        return fetch(`${this._url}${name}`, {\r\n            headers: this._headers,\r\n        });\r\n    }\r\n\r\n    _getServerData(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n\r\n    getInitialCards() {\r\n        return this.authentication('cards')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getProfileData() {\r\n        return this.authentication('users/me')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getAllData() {\r\n        return Promise.all([this.getProfileData(), this.getInitialCards()]);\r\n    }\r\n\r\n    saveEditedInfo(formData) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                about: formData.about\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    addNewCard(item) {\r\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-19/cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: item.name,\r\n                link: item.link\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n\r\n    }\r\n\r\n    putLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: this._headers,\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    updateAvatar(link) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link.link,\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n}\r\n\r\nconst api = new Api(options);\r\n\r\nexport default api;","export default __webpack_public_path__ + \"static/media/update-avatar.ae1a976d.svg\";","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onCardClick(props.item);\r\n    }\r\n\r\n    return (\r\n        <li className=\"element\">\r\n            <img className=\"element__image\" src={props.item.link} alt=\"#\" onClick={handleClick}/>\r\n            <button className=\"element__button-trash\" type=\"button\"></button>\r\n            <div className=\"element__name-place\">\r\n                <h2 className=\"element__name-title\">{props.item.name}</h2>\r\n                <div className=\"element__like\">\r\n                    <button id=\"likeButton\" className=\"element__button-like\" type=\"button\"></button>\r\n                    <p className=\"element__like-counter\">{props.item.likes.length}</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card","import React, {useEffect, useState} from \"react\";\r\nimport api from \"../utils/Api\";\r\nimport pencil from \"../images/update-avatar.svg\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Main(props) {\r\n    const [userName, setUserName] = useState('');\r\n    const [userDescription, setUserDescription] = useState('');\r\n    const [userAvatar, setUserAvatar] = useState('');\r\n    const [cards, setCards] = useState([]);\r\n    useEffect(() => {\r\n        api.getAllData()\r\n            .then((response => {\r\n                const [userData, cardsData] = response;\r\n                setCards(cardsData);\r\n                setUserName(userData.name);\r\n                setUserDescription(userData.about);\r\n                setUserAvatar(userData.avatar);\r\n            }))\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__image\" style={{backgroundImage: `url(${userAvatar})`}}\r\n                         onClick={props.onEditAvatar}>\r\n                    </div>\r\n                    <img className=\"profile__image-hover\" src={pencil} alt=\"Карандаш\"/>\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{userName}</h1>\r\n                        <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile}></button>\r\n                        <h2 className=\"profile__title\">{userDescription}</h2>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {cards.map((item) => <Card key={item._id} item={item} onCardClick={props.onCardClick}/>)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer","function PopupWithForm(props) {\r\n    return (\r\n        <div className={props.isOpen ? `popup popup_${props.name} popup_opened` : `popup popup_${props.name}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\r\n                <div className=\"popup__area\">\r\n                    <h2 className=\"popup__title\">{`${props.title}`}</h2>\r\n\r\n                    <form className={`popup__fields popup__fields_${props.name}`} name=\"popups\" noValidate>\r\n                        {props.children}\r\n                        <button className=\"popup__button popup__button_edit-profile popup__button_inactive\"\r\n                                type=\"submit\"\r\n                                value=\"Сохранить\">Сохранить\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PopupWithForm\r\n\r\n","function ImagePopup(props) {\r\n\r\n    return (\r\n        <div className={props.card ? `popup popup_image popup_opened` : `popup popup_image`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close popup__close_image\" type=\"button\" onClick={props.onClose}></button>\r\n                <img className=\"popup__image-full\" src={props.card.link} alt=\"Фотография\"/>\r\n                <p className=\"popup__image-sign\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImagePopup","import React from 'react'\r\nimport {useState} from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport Footer from './Footer'\r\nimport PopupWithForm from './PopupWithForm'\r\nimport ImagePopup from './ImagePopup'\r\n\r\n\r\nfunction App() {\r\n\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n    }\r\n\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n    }\r\n\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n    }\r\n\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"body\">\r\n            <div className=\"page\">\r\n                <Header/>\r\n                <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\r\n                      onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\r\n\r\n                <Footer/>\r\n\r\n                <PopupWithForm id='popupEdit' title='Редактировать профиль' name='edit-profile'\r\n                               isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\r\n                    <input id=\"nameField\" className=\"popup__field popup__field_name\" type=\"text\" name=\"name\"\r\n                           placeholder=\"Имя\"\r\n                           minLength=\"2\" maxLength=\"40\" required/>\r\n                    <span id='nameField-error'></span>\r\n                    <input id=\"titleField\" className=\"popup__field popup__field_title\" type=\"text\" name=\"about\"\r\n                           placeholder=\"О себе\"\r\n                           minLength=\"2\" maxLength=\"200\" required/>\r\n                    <span id='titleField-error'></span>\r\n                </PopupWithForm>\r\n                <PopupWithForm id=\"popupAdd\" title='Новое место' name='add-card' isOpen={isAddPlacePopupOpen}\r\n                               onClose={closeAllPopups}>\r\n                    <input id=\"placeField\" className=\"popup__field popup__field_add-card popup__field_place\" type=\"text\"\r\n                           name=\"name\"\r\n                           placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required/>\r\n                    <span id='placeField-error'></span>\r\n                    <input id=\"sourceField\" className=\"popup__field popup__field_add-card popup__field_source\"\r\n                           type=\"url\"\r\n                           name=\"link\"\r\n                           placeholder=\"Ссылка на картинку\" required/>\r\n                    <span id='sourceField-error'></span>\r\n                </PopupWithForm>\r\n                <PopupWithForm id='popupAvatar' title='Обновить аватар' name='update-avatar'\r\n                               isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\r\n                    <input id=\"updateField\" className=\"popup__field popup__field_update\" type=\"url\" name=\"link\"\r\n                           placeholder=\"Ссылка на картинку\" required/>\r\n                    <span id='updateField-error'></span>\r\n                </PopupWithForm>\r\n                <PopupWithForm id='popupConfirm' title='Вы уверены?' name='confirm'>\r\n                </PopupWithForm>\r\n                <ImagePopup id='popupImage' card={selectedCard} onClose={closeAllPopups}>\r\n                </ImagePopup>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}